#+INCLUDE: "baslik.org"
* MoveIt
  Numerik tekrarlama
  (C|M)-Num Komut örneği C-5 C-f
  
  | Komut | Boyut    | Yöne  |
  | C-f   | Karakter | İleri |
  | C-b   | Karakter | Geri  |
  | C-n   | Satır    | İleri |
  | M-f   | Kelime   | İleri |
  | C-p   | Satır    | Geri  |
  | M-f   | Kelime   | İleri |
  | M-b   | Kelime   | Geri  |
  | M-v   | Paragraf | İleri |
  | C-v   | Paragraf | Geri  |
  | M-<   | Buffer   | Tepe  |
  | M->   | Buffer   | Dip   |

* SpacEmacs & ErgoEmacs
  Bana fazla karışık geldi. Sıfırdan kendin kurup neyin ne olduğunu bilmek daha güzel geliyor. Tabi ne var ne yok görmek için iyi oldu.
  [[https://github.com/syl20bnr/spacemacs][SpacEmacs]] & [[http://ergoemacs.org/][ErgoEmacs]]
* orgmode easy templates

  | 1. | 2.  | Sonuç                             |
  | <s | TAB | #+BEGIN_SRC ... #+END_SRC         |
  | <e | TAB | #+BEGIN_EXAMPLE ... #+END_EXAMPLE |
  | <q | TAB | #+BEGIN_QUOTE ... #+END_QUOTE     |
  | <v | TAB | #+BEGIN_VERSE ... #+END_VERSE     |
  | <c | TAB | #+BEGIN_CENTER ... #+END_CENTER   |
  | <l | TAB | #+BEGIN_LaTeX ... #+END_LaTeX     |
  | <L | TAB | #+LaTeX:                          |
  | <h | TAB | #+BEGIN_HTML ... #+END_HTML       |
  | <H | TAB | #+HTML:                           |
  | <a | TAB | #+BEGIN_ASCII ... #+END_ASCII     |
  | <A | TAB | #+ASCII:                          |
  | <i | TAB | #+INDEX: line                     |
  | <I | TAB | #+INCLUDE: line                   |
   
* Orgmode metin stilleri
  | _ | _metin stili_ |
  | / | /metin stili/ |
  | * | *metin stili* |
  | ~ | ~metin stili~ |
  | = | =metin stili= |
  | + | +metin stili+ |

* Elpy kısayollar
  | M - .       | Tanımlanan noktaya git        |
  | M - *       | M - . ya geri dön             |
  | C - c C - o | Fonsiyon ve sınıfları listele |

* Kaydedilmemiş değişiklikler
  C-x s kombinasyonu ile toplu tampon kayıtlarında "d" tuşu ile değişiklikler
  görülebilir. 
* multiple replace on fly						:Ara:
  Değiştirilen kelimenin her bir kopyasının aynı anda güncellenmesi
* .emacs
* ipuçları
** List occurence
   M - s o -> list occurence
   M - s o RET def RET -> list functions
   M - s o RET class RET -> list classes
** conf-mode
** Template kısayolları
| 1. | 2. | 3.  | Sonuç                             |
| <  | s  | TAB | #+BEGIN_SRC ... #+END_SRC         |
| <  | e  | TAB | #+BEGIN_EXAMPLE ... #+END_EXAMPLE |
| <  | q  | TAB | #+BEGIN_QUOTE ... #+END_QUOTE     |
| <  | v  | TAB | #+BEGIN_VERSE ... #+END_VERSE     |
| <  | c  | TAB | #+BEGIN_CENTER ... #+END_CENTER   |
| <  | l  | TAB | #+BEGIN_LaTeX ... #+END_LaTeX     |
| <  | L  | TAB | #+LaTeX:                          |
| <  | h  | TAB | #+BEGIN_HTML ... #+END_HTML       |
| <  | H  | TAB | #+HTML:                           |
| <  | a  | TAB | #+BEGIN_ASCII ... #+END_ASCII     |
| <  | A  | TAB | #+ASCII:                          |
| <  | i  | TAB | #+INDEX: line                     |
| <  | I  | TAB | #+INCLUDE: line                   |
** Registerlar
   *C-x r s r*
   Copy region into register r (copy-to-register).
   
   *C-x r i r*
   Insert text from register r (insert-register).
   
   *M-x append-to-register RET r*
   Append region to text in register r.
   When register r contains text, you can use C-x r + (increment-register) to append to that register. Note that command C-x r + behaves differently if r contains a number. See Number Registers.
   
   *M-x prepend-to-register RET r*
   Prepend region to text in register r.
* ElPy
  1. Reponun eklenmesi
     #+BEGIN_SRC elisp
     (require 'package)
     (add-to-list 'package-archives
             '("elpy" . "http://jorgenschaefer.github.io/packages/"))
     #+END_SRC
  2. Paketin yüklenmesi
     M-x package-install RET elpy
  3. Paketin aktifleştirilmesi
     #+BEGIN_SRC elisp
     (package-initialize)
     (elpy-enable)
     #+END_SRC
  4. Paketin yapılandırılması
     M-x elpy-config RET
* Bağlantılar
#+INCLUDE: "baglantilar.org"
